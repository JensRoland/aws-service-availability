# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "aws-service-availability"
version = "1.0.1"
description = "CLI tool for listing (un)available AWS services by region"
readme = "README.md"
authors = ["JensRoland <mail@jensroland.com>"]
license = "GNU GPL v3.0"
repository = "https://github.com/jensroland/aws-service-availability"
homepage = "https://github.com/jensroland/aws-service-availability"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
]

packages = [
    { include = "aws_service_availability", from = "src" },
]

[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"aws-service-availability" = "aws_service_availability.__main__:app"

[tool.poetry.dependencies]
python = "^3.7"
importlib_metadata = {version = "^4.5.0", python = "<3.8"}
typer = {extras = ["all"], version = "^0.4.0"}
rich = "^10.14.0"
requests = "^2.27.1"

[tool.poetry.dev-dependencies]
bandit = "^1.7.1"
black = {version = "^22.1.0"}
darglint = "^1.8.1"
isort = {extras = ["colors"], version = "^5.10.1"}
mypy = "^0.931"
mypy-extensions = "^0.4.3"
pre-commit = "^2.15.0"
pydocstyle = "^6.1.1"
pylint = "^2.11.1"
pytest = "^7.0.1"
pyupgrade = "^2.29.1"
safety = "^1.10.3"
coverage = "^6.1.2"
coverage-badge = "^1.1.0"
pytest-html = "^3.1.1"
pytest-cov = "^3.0.0"
types-requests = "^2.27.11"

[tool.black]
# https://github.com/psf/black
target-version = ["py37"]
line-length = 120
exclude = '''
/(
    \.git
    | \.github
    | \.mypy_cache
    | \.nox
    | \.tox
    | \.venv
    | \.vscode
    | _build
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 37
line_length = 120
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true
skip = [
  '.direnv',
  '.git',
  '.github',
  '.mypy_cache',
  '.nox',
  '.tox',
  '.venv',
  '.vscode',
  '__pypackages__',
  '_build',
  'build',
  'dist',
  'node_modules',
  'env',
  'venv',
  "__init__.py"  # There is a known bug in isort on __init__.py files
]

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.7
pretty = true
show_traceback = true
color_output = true
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.messages_control]
jobs = 0  # Use all CPU cores
max-line-length = 120
disable = "no-self-use"

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "aws-service-availability"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
